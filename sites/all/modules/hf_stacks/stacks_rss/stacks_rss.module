<?php
/*
 * Stacks rss module allows the creation and management of RSS feeds
 */


/**
 * Implements hook_menu()
 *
 * @return array
 */
function stacks_rss_menu() {
	$items = array();

  $items['admin/rss-feeds'] = array(
    'title' => 'Stacks RSS Feeds',
    'page callback' => 'stacks_rss_list',
    'access arguments' => array('administer feeds'),
    'type' => MENU_CALLBACK,
    'file' => 'stacks_rss.page.inc',
  );
  $items['admin/rss-feeds/add'] = array(
    'title' => 'Stacks RSS Feeds',
    'description' => 'Create a new RSS feed.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('stacks_rss_add'),
    'access arguments' => array('administer feeds'),
    'type' => MENU_CALLBACK,
    'file' => 'stacks_rss.admin.inc',
  );
  $items['admin/rss-feeds/edit/%'] = array(
    'title' => 'Stacks RSS Feeds',
    'description' => 'Edit a current RSS feed.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('stacks_rss_edit'),
    'access arguments' => array('administer feeds'),
    'type' => MENU_CALLBACK,
    'file' => 'stacks_rss.admin.inc',
  );
  $items['admin/rss-feeds/delete/%'] = array(
    'title' => 'Stacks RSS Feeds',
    'description' => 'Delete a current RSS feed.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('stacks_rss_delete'),
    'access arguments' => array('administer feeds'),
    'type' => MENU_CALLBACK,
    'file' => 'stacks_rss.admin.inc',
  );

	return $items;
}

/**
 * Implementation of hook_block_info().
 */
function stacks_rss_block_info() {
  $blocks = array();
  $blocks['hf_rss_feeds'] = array(
    'info' => t('RSS Block'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implementation of hook_block_view().
 */
function stacks_rss_block_view($delta = '') {
  // retrieve query string, if available.
  $query_params = drupal_get_query_parameters();

  //Query the fields needed for listing
  $query = db_select('node', 'n');
  $query->leftJoin('field_data_field_rss_link', 'link', 'link.entity_id = n.nid');
  $query->leftJoin('field_data_field_rss_timestamp', 'time', 'time.entity_id = n.nid');
  $query->fields('n', array('title', 'created', 'nid', 'type'));
  $query->fields('link', array('entity_id', 'field_rss_link_url', 'field_rss_link_title'));
  $query->fields('time', array('entity_id', 'field_rss_timestamp_value'));
  $query->condition('n.type', 'rss_item', '=');
  $query->condition('n.status', '1', '=');
  //$query->condition('time.field_rss_timestamp_value', 'NOW()', '>');
  $query->orderBy('n.created', 'ASC');
  $query->range(0,5);

  $feed = $query->execute()->fetchAll();

  $block = array();

  $block_content = "";

  foreach ($feed as $rss) {
    //dpm($event);

    $block_content .= "<div class='panel row'>";
      $date_start = new DateTime($rss->field_rss_timestamp_value);

      $block_content .= "<p><span class='events-block-date'>".date_format($date_start, 'M jS - g:iA')."</span><br />";
      $block_content .= "<a href=\"".$rss->field_rss_link_url."\">".$rss->title."</a></p>";

      //$block_content .= "<span>".date_format($date_start, 'g:i A')."</span>";
    $block_content .= "</div>";
  }

  $block['content'] = $block_content;
  $block['title'] = 'RSS Feeds';

  return $block;
}