<?php

// implements hook_menu()
function hf_mobile_menu() {
  $menu = array();

  $menu['admin/config/stacks/mobile'] = array(
    'title' => 'Mobile Application',
    'description' => 'Settings for mobile applications',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hf_mobile_admin_form'),
    'access arguments' => array('administer stacks config'),
    'file' => 'hf_mobile.admin.inc',
  );
  $menu['mobile/initialize'] = array(
    'title' => 'Mobile Initialization',
    'page callback' => 'hf_mobile_display',
    'access arguments' => array('access content'),
  );

  return $menu;
}

//function for displaying the admin dashboard
function hf_mobile_display() {
  global $base_url;

  $settings = array();
  $result = db_select('variable', 'v')
    ->fields('v', array('value'))
    ->condition('name', 'theme_default', '=')
    ->execute();

  foreach ($result as $row) {
    $settings = $row->value;
  }

  $output = unserialize($settings);

  if ($output == 'catarina') {
    $theme = 'theme_catarina_settings';
  } else {
    $theme = 'theme_hfstacks_settings';
  }

  $theme_settings = array();
  $result = db_select('variable', 'v')
    ->fields('v', array('value'))
    ->condition('name', $theme, '=')
    ->execute();

  foreach ($result as $row) {
    $theme_settings = $row->value;
  }

  $theme_output = unserialize($theme_settings);

  // mobile search icon
  $mobile_icon_search = $theme_output['mobile_icon_search'];
  if ((!empty($mobile_icon_search)) && ($mobile_icon_search != '0')) {
    $result = db_select('file_managed', 'f')
      ->fields('f', array('uri'))
      ->condition('fid', $mobile_icon_search, '=')
      ->execute();

    foreach ($result as $row) {
      $mobile_icon_search = $row->uri;
    }

    $mobile_icon_search = str_replace("public://", "sites/default/files/", $mobile_icon_search);
  } else {
    $mobile_icon_search = "sites/all/modules/hf_stacks/hf_mobile/icons/search.png";
  }

  // mobile account icon
  $mobile_icon_account = $theme_output['mobile_icon_account'];
  if ((!empty($mobile_icon_account)) && ($mobile_icon_account != '0')) {
    $result = db_select('file_managed', 'f')
      ->fields('f', array('uri'))
      ->condition('fid', $mobile_icon_account, '=')
      ->execute();

    foreach ($result as $row) {
      $mobile_icon_account = $row->uri;
    }

    $mobile_icon_account = str_replace("public://", "sites/default/files/", $mobile_icon_account);
  } else {
    $mobile_icon_account = "sites/all/modules/hf_stacks/hf_mobile/icons/account.png";
  }

  // mobile location icon
  $mobile_icon_location = $theme_output['mobile_icon_location'];
  if ((!empty($mobile_icon_location)) && ($mobile_icon_location != '0')) {
    $result = db_select('file_managed', 'f')
      ->fields('f', array('uri'))
      ->condition('fid', $mobile_icon_location, '=')
      ->execute();

    foreach ($result as $row) {
      $mobile_icon_location = $row->uri;
    }

    $mobile_icon_location = str_replace("public://", "sites/default/files/", $mobile_icon_location);
  } else {
    $mobile_icon_location = "sites/all/modules/hf_stacks/hf_mobile/icons/location.png";
  }

  // mobile events icon
  $mobile_icon_events = $theme_output['mobile_icon_events'];
  if ((!empty($mobile_icon_events)) && ($mobile_icon_events != '0')) {
    $result = db_select('file_managed', 'f')
      ->fields('f', array('uri'))
      ->condition('fid', $mobile_icon_events, '=')
      ->execute();

    foreach ($result as $row) {
      $mobile_icon_events = $row->uri;
    }

    $mobile_icon_events = str_replace("public://", "sites/default/files/", $mobile_icon_events);
  } else {
    $mobile_icon_events = "sites/all/modules/hf_stacks/hf_mobile/icons/event.png";
  }

  // mobile barcode icon
  $mobile_icon_barcode = $theme_output['mobile_icon_barcode'];
  if ((!empty($mobile_icon_barcode)) && ($mobile_icon_barcode != '0')) {
    $result = db_select('file_managed', 'f')
      ->fields('f', array('uri'))
      ->condition('fid', $mobile_icon_barcode, '=')
      ->execute();

    foreach ($result as $row) {
      $mobile_icon_barcode = $row->uri;
    }

    $mobile_icon_barcode = str_replace("public://", "sites/default/files/", $mobile_icon_barcode);
  } else {
    $mobile_icon_barcode = "sites/all/modules/hf_stacks/hf_mobile/icons/barcode.png";
  }

  // mobile flow icon
  $mobile_icon_flow = $theme_output['mobile_icon_flow'];
  if ((!empty($mobile_icon_flow)) && ($mobile_icon_flow != '0')) {
    $result = db_select('file_managed', 'f')
      ->fields('f', array('uri'))
      ->condition('fid', $mobile_icon_flow, '=')
      ->execute();

    foreach ($result as $row) {
      $mobile_icon_flow = $row->uri;
    }

    $mobile_icon_flow = str_replace("public://", "sites/default/files/", $mobile_icon_flow);
  } else {
    $mobile_icon_flow = "sites/all/modules/hf_stacks/hf_mobile/icons/flow.png";
  }

  // mobile database icon
  $mobile_icon_database = $theme_output['mobile_icon_database'];

  if ((!empty($mobile_icon_database)) && ($mobile_icon_database != '0')) {
    $result = db_select('file_managed', 'f')
      ->fields('f', array('uri'))
      ->condition('fid', $mobile_icon_database, '=')
      ->execute();

    foreach ($result as $row) {
      $mobile_icon_database = $row->uri;
    }

    //$mobile_icon_database = str_replace("public://", "sites/default/files/", $mobile_icon_database);

    $mobile_icon_database = $mobile_icon_database ? file_create_url($mobile_icon_database) : '';
  } else {
    $mobile_icon_database = "sites/all/modules/hf_stacks/hf_mobile/icons/database.png";
  }

  // get the info for the resource flow
  $stacks_mobile_resource = variable_get('stacks_mobile_resource', '');

  $resource_title = '';
  $resource_upc = '';
  $resource_isbn = '';
  $resource_bibid = '';

  if (!empty($stacks_mobile_resource)) {
    $query = db_select('node', 'n');
    $query->leftJoin('field_data_field_isbn', 'i', 'i.entity_id = n.nid');
    $query->leftJoin('field_data_field_upc', 'u', 'u.entity_id = n.nid');
    $query->leftJoin('field_data_field_bibid', 'b', 'b.entity_id = n.nid');
    $query->fields('n', array('title', 'nid'));
    $query->fields('i', array('field_isbn_value'));
    $query->fields('u', array('field_upc_value'));
    $query->fields('b', array('field_bibid_value'));
    $query->condition('type', 'resource_list', '=');
    $query->condition('nid', $stacks_mobile_resource, '=');
    $query->orderBy('title', 'ASC');
    $results = $query->execute();
    while ($record = $results->fetchAssoc()) {
      $resource_title = $record["title"];
      $resource_isbn = $record["field_isbn_value"];
      $resource_upc = $record["field_upc_value"];
      $resource_bibid = $record["field_bibid_value"];
    }
  }

  $branch_array = array();

  // get the info for the library branches / locations
  $query = db_select('node', 'n');
  $query->leftJoin('field_data_field_branch_phone', 'p', 'p.entity_id = n.nid');
  $query->leftJoin('field_data_field_branch_fax', 'f', 'f.entity_id = n.nid');
  $query->leftJoin('field_data_field_branch_email', 'e', 'e.entity_id = n.nid');

  $query->leftJoin('field_data_field_branch_sunday', 'hsun', 'hsun.entity_id = n.nid');
  $query->leftJoin('field_data_field_branch_monday', 'hmon', 'hmon.entity_id = n.nid');
  $query->leftJoin('field_data_field_branch_tuesday', 'htue', 'htue.entity_id = n.nid');
  $query->leftJoin('field_data_field_branch_wednesday', 'hwed', 'hwed.entity_id = n.nid');
  $query->leftJoin('field_data_field_branch_thursday', 'hthu', 'hthu.entity_id = n.nid');
  $query->leftJoin('field_data_field_branch_friday', 'hfri', 'hfri.entity_id = n.nid');
  $query->leftJoin('field_data_field_branch_saturday', 'hsat', 'hsat.entity_id = n.nid');

  $query->fields('n', array('title','nid'));
  $query->fields('p', array('field_branch_phone_number'));
  $query->fields('f', array('field_branch_fax_number'));
  $query->fields('e', array('field_branch_email_email'));

  $query->fields('hsun', array('field_branch_sunday_value'));
  $query->fields('hmon', array('field_branch_monday_value'));
  $query->fields('htue', array('field_branch_tuesday_value'));
  $query->fields('hwed', array('field_branch_wednesday_value'));
  $query->fields('hthu', array('field_branch_thursday_value'));
  $query->fields('hfri', array('field_branch_friday_value'));
  $query->fields('hsat', array('field_branch_saturday_value'));

  $query->condition('type', 'library_branch', '=');
  $query->orderBy('title', 'ASC');
  $results = $query->execute();

  $sub_branch = array();
  $contact_branch = array();
  $hours = array();

  while($record = $results->fetchAssoc()) {
    $sub_branch = [];
    $contact_branch = [];
    $hours = [];

    $sub_branch["name"] = $record["title"];
    $sub_branch["branchId"] = $record["nid"];
    $sub_branch["website"] = $record["field_branch_website"];
    $sub_branch["phone"] = $record["field_branch_phone_number"];
    $sub_branch["fax"] = $record["field_branch_fax_number"];
    $sub_branch["email"] = $record["field_branch_email_email"];

    $hours["sunday"] = $record["field_branch_sunday_value"];
    $hours["monday"] = $record["field_branch_monday_value"];
    $hours["tuesday"] = $record["field_branch_tuesday_value"];
    $hours["wednesday"] = $record["field_branch_wednesday_value"];
    $hours["thursday"] = $record["field_branch_thursday_value"];
    $hours["friday"] = $record["field_branch_friday_value"];
    $hours["saturday"] = $record["field_branch_saturday_value"];

    // get the info for the library branches / locations
    $queryContact = db_select('node', 'n');
    $queryContact->leftJoin('field_data_field_branch_contact', 'c', 'c.entity_id = n.nid');
    $queryContact->leftJoin('field_data_field_branch_contact_name', 'cn', 'cn.entity_id = c.field_branch_contact_value');
    $queryContact->leftJoin('field_data_field_branch_contact_position', 'cp', 'cp.entity_id = c.field_branch_contact_value');
    $queryContact->leftJoin('field_data_field_branch_contact_phone', 'ch', 'ch.entity_id = c.field_branch_contact_value');
    $queryContact->leftJoin('field_data_field_branch_contact_email', 'ce', 'ce.entity_id = c.field_branch_contact_value');
    $queryContact->fields('cn', array('field_branch_contact_name_value'));
    $queryContact->fields('cp', array('field_branch_contact_position_value'));
    $queryContact->fields('ch', array('field_branch_contact_phone_number'));
    $queryContact->fields('ce', array('field_branch_contact_email_email'));
    $queryContact->condition('nid', $record["nid"], '=');
    $queryContact->orderBy('title', 'ASC');
    $resultsContact = $queryContact->execute();

    $contactCounter = 0;

    while($recordContact = $resultsContact->fetchAssoc()) {
      $contact_branch_sub = array();
      if (!empty($recordContact["field_branch_contact_name_value"])) {
        $contact_branch_sub["contactName"][] = $recordContact["field_branch_contact_name_value"];
        $contactCounter++;
      }
      if (!empty($recordContact["field_branch_contact_name_value"])) {
        $contact_branch_sub["contactPosition"][] = $recordContact["field_branch_contact_position_value"];
        $contactCounter++;
      }
      if (!empty($recordContact["field_branch_contact_name_value"])) {
        $contact_branch_sub["contactPhone"][] = $recordContact["field_branch_contact_phone_number"];
        $contactCounter++;
      }
      if (!empty($recordContact["field_branch_contact_name_value"])) {
        $contact_branch_sub["contactEmail"][] = $recordContact["field_branch_contact_email_email"];
        $contactCounter++;
      }
      $contact_branch[] = $contact_branch_sub;
    }

    if($contactCounter > 0) {
      $sub_branch["contacts"] = $contact_branch;
    }
    $sub_branch["hours"] = $hours;
    $branch_array[] = $sub_branch;
  }

  if (!empty($theme_output['background_color'])) {
    $background_color = '#'.$theme_output['background_color'];
  } else {
    $background_color = '#B0171F';
  }

  if (!empty($theme_output['icons_color'])) {
    $iconsColor = '#'.$theme_output['icons_color'];
  } else {
    $iconsColor = '#FFC0CB';
  }

  if (!empty($theme_output['bar_color'])) {
    $barColor = '#'.$theme_output['bar_color'];
  } else {
    $barColor = '#339933';
  }

  if (!empty($theme_output['text_color'])) {
    $textColor = '#'.$theme_output['text_color'];
  } else {
    $textColor = '#FFC0CB';
  }

  if (!empty($theme_output['header_color'])) {
    $headerColor = '#'.$theme_output['header_color'];
  } else {
    $headerColor = '#FFC0CB';
  }

  if (!empty($theme_output['highlight_color'])) {
    $highlightColor = '#'.$theme_output['highlight_color'];
  } else {
    $highlightColor = '#FFC0CB';
  }

  if (!empty($theme_output['logo_mini_path'])) {
    $miniLogoUrl = '#'.$theme_output['logo_mini_path'];
  } else {
    $miniLogoUrl = 'http://mobcdn.hybridforge.com/owllogo/mini-hutchinson.png';
  }

  if (!empty($theme_output['logo_path'])) {
    $logoUrl = '#'.$theme_output['logo_path'];
  } else {
    $logoUrl = 'http://mobcdn.hybridforge.com/owllogo/logo-box-hutchinson@2x.png';
  }

  $mobile = array();
  $menu = array();

  $mobile['success'] = "true";

  $mobile['theme']['backGroundColor'] = $background_color;
  $mobile['theme']['iconsColor'] = $iconsColor;
  $mobile['theme']['barColor'] = $barColor;
  $mobile['theme']['textColor'] = $textColor;
  $mobile['theme']['headerColor'] = $headerColor;
  $mobile['theme']['highlightColor'] = $highlightColor;
  $mobile['theme']['miniLogoUrl'] = $miniLogoUrl;
  $mobile['theme']['logoUrl'] = $logoUrl;

  $ils = variable_get('stacks_auth', '');

  $mobile['ilsProvider']['providerID'] = $ils;

  switch ($ils) {
    case "polaris":
      $mobile['ilsProvider']['providerCredentials']['url'] = variable_get('stacks_auth_polaris_url', '');
      $mobile['ilsProvider']['providerCredentials']['sig'] = variable_get('stacks_auth_polaris_signature', '');
      $mobile['ilsProvider']['providerCredentials']['key'] = variable_get('stacks_auth_polaris_private_key', '');
      $mobile['ilsProvider']['providerCredentials']['accessKey'] = variable_get('stacks_auth_polaris_access_id', '');
      break;
    case "sirsi":
      $mobile['ilsProvider']['providerCredentials']['client'] = variable_get('stacks_auth_sirsi_client', '');
      $mobile['ilsProvider']['providerCredentials']['url'] = variable_get('stacks_auth_sirsi_url', '');
      break;
    case "iii":
      $mobile['ilsProvider']['providerCredentials']['url'] = variable_get('stacks_auth_iii', '');
      break;
    case "sip2":
      $mobile['ilsProvider']['providerCredentials']['url'] = variable_get('stacks_auth_sip2_host', '');
      $mobile['ilsProvider']['providerCredentials']['pass'] = variable_get('stacks_auth_sip2_password', '');
      $mobile['ilsProvider']['providerCredentials']['port'] = variable_get('stacks_auth_sip2_port', '');
      $mobile['ilsProvider']['providerCredentials']['user'] = variable_get('stacks_auth_sip2_username', '');
      break;
  }

  /* Book Jackets */
  $bookJacket = variable_get('stacks_cover_provider', '');
  $mobile['bookJacketsProvider']['providerID'] = $bookJacket;
  switch ($bookJacket) {
    case "syndetics":
      $mobile_url = variable_get('stacks_resource_list_syndetics_url', '');
      $mobile_url = drupal_parse_url($mobile_url);
      $mobile_url = $mobile_url['path']."?client=".$mobile_url['query']['client'];
      $mobile['bookJacketsProvider']['providerCredentials']['url'] = $mobile_url;
      break;
    case "contente_cafe":
      $mobile_url = variable_get('stacks_resource_list_contentcafe_url', '');
      $mobile_url = drupal_parse_url($mobile_url);
      $mobile_url = $mobile_url['path']."?client=".$mobile_url['query']['client'];
      $mobile['bookJacketsProvider']['providerCredentials']['url'] = $mobile_url;
      break;
    case "chilifresh":
      $mobile_url = variable_get('stacks_resource_list_chilifresh_url', '');
      $mobile_url = drupal_parse_url($mobile_url);
      $mobile_url = $mobile_url['path']."?client=".$mobile_url['query']['client'];
      $mobile['bookJacketsProvider']['providerCredentials']['url'] = $mobile_url;
      break;
  }

  /* Related Items*/
  $mobile['relatedProvider']['providerID'] = 'novelist';
  $mobile['relatedProvider']['providerCredentials']['user'] = variable_get('hf_similartitles_novelist_userid', '');
  $mobile['relatedProvider']['providerCredentials']['pass'] = variable_get('hf_similartitles_novelist_password', '');

  /* Reviews Provider*/
  $mobile["reviewsProvider"]["providerId"] = 'BakerTaylor';
  $mobile['reviewsProvider']["providerCredentials"]["user"] = variable_get('hf_reviews_bakerandtaylor_userID', '');
  $mobile['reviewsProvider']["providerCredentials"]["pass"] = variable_get('hf_reviews_bakerandtaylor_password', '');

  $mobile['ebscoCredentials']['endPoint'] = variable_get('stacks_eds_server', '');
  $mobile['ebscoCredentials']['authEndPoint'] = 'https://eds-api.ebscohost.com/Authservice/rest';
  $mobile['ebscoCredentials']['profile'] = variable_get('stacks_eds_profile', '');
  $mobile['ebscoCredentials']['orgId'] = variable_get('stacks_eds_org', '');
  $mobile['ebscoCredentials']['userName'] = variable_get('stacks_eds_user', '');
  $mobile['ebscoCredentials']['password'] = variable_get('stacks_eds_pass', '');

  $menu['search']['title'] = 'Search';
  $menu['search']['iconUrl'] = $base_url."/".$mobile_icon_search;
  $menu['search']['moduleID'] = 'Search';

  $menu['account']['title'] = 'Account';
  $menu['account']['iconUrl'] = $base_url."/".$mobile_icon_account;
  $menu['account']['moduleID'] = 'Account';

  $menu['location']['title'] = 'Locations';
  $menu['location']['iconUrl'] = $base_url."/".$mobile_icon_location;
  $menu['location']['moduleID'] = 'Locations';

  $mobile['menuItems'][] = $menu['search'];
  $mobile['menuItems'][] = $menu['account'];
  $mobile['menuItems'][] = $menu['location'];

  $mobile['branches'] = $branch_array;

  //$mobile['eventsUrl'] = variable_get('stacks_mobile_events', '');
  $mobile['eventsUrl'] = $base_url."/mobile/events";

  // Databases
  //$mobile['databasesUrl'] = variable_get('stacks_mobile_database', '');

  $database_array = array();
  $sub_database = array();

  $query = db_select('node', 'n');
  $query->leftJoin('field_data_body', 'b', 'b.entity_id = n.nid');
  $query->leftJoin('field_data_field_e_resource_url', 'u', 'u.entity_id = n.nid');
  $query->fields('n', array('title', 'nid'));
  $query->fields('b', array('body_value'));
  $query->fields('u', array('field_e_resource_url_url'));
  $query->condition('type', 'e_resource', '=');
  $query->orderBy('title', 'ASC');
  $results = $query->execute();
  while ($record = $results->fetchAssoc()) {
    $sub_database = [];

    $sub_database["title"] = $record["title"];
    $body_value = $record["body_value"];
    $body_value = strip_tags($body_value);
    $body_value = trim($body_value);
    $body_value = truncate_utf8($body_value, 150, TRUE, TRUE);
    $sub_database["shortDesc"] = $body_value;
    $sub_database["url"] = $record["field_e_resource_url_url"];

    $database_array[] = $sub_database;
  }

  $mobile['databases'] = $database_array;

  $mobile['pushRegistrationUrl'] = variable_get('stacks_mobile_push', '');

  /*
  $mobile['resourceflow']['title'] = $resource_title;
  $mobile['resourceflow']['UPC'] = $resource_upc;
  $mobile['resourceflow']['ISBN'] = $resource_isbn;
  $mobile['resourceflow']['bibId'] = $resource_bibid;
  */

  $resource_array = array();
  $resource_main = array();
  $resource_sub = array();
  $resource_items = array();

  $query = db_select('node', 'n');
  $query->leftJoin('field_data_field_items', 'i', 'i.entity_id = n.nid');
  $query->fields('n', array('title', 'nid'));
  $query->fields('i', array('field_items_value'));
  $query->condition('type', 'resource_list', '=');
  $query->orderBy('title', 'ASC');
  $query->groupBy('title', 'n.nid');
  $results = $query->execute();

  while ($record = $results->fetchAssoc()) {
    $resource_sub = [];

    $node = node_load($record["nid"]);
    $items = field_get_items('node', $node, 'field_items');

    foreach ($items as $item) {
      $resource_items = [];

      $field_collection_item = field_collection_item_load($item['value']);
      $resource_items["title"] = $field_collection_item->field_title['und'][0]['value'];
      $resource_items["upc"] = $field_collection_item->field_upc['und'][0]['value'];
      $resource_items["isbn"] = $field_collection_item->field_isbn['und'][0]['value'];
      $resource_items["bibid"] = $field_collection_item->field_bibid['und'][0]['value'];

      $resource_sub[] = $resource_items;
    }

    $resource_main["flowTitle"] = $record["title"];
    $resource_main["items"] = $resource_sub;

    $resource_array[] = $resource_main;
  }

  $mobile['resourceFlow'] = $resource_array;

  //echo '<pre>'.json_encode($mobile, JSON_PRETTY_PRINT).'</pre>';
  //return json_encode($mobile);
  return drupal_json_output($mobile);
}