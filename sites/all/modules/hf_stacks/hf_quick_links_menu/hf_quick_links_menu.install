<?php

/**
 * Implement hook_install()
 */
 function hf_quick_links_menu_enable() {
    $menu = array(
        'menu_name' => 'quick-links-menu',
        'title' => 'Quick Link Menu',
        'description' => 'Quick links menu'
    );
    menu_save($menu);
    // Build links
    build_new_link();
    menu_rebuild();

    // Set Permission
    set_module_permission();

    // Clear cache
    cache_clear_all('*', 'cache_menu', TRUE);
    drupal_set_message($message = t('Quick links was successfully installed. '), $type = 'status');
}

/**
 * Implement hook_disable()
 */
 function hf_quick_links_menu_disable() {
  $num_deleted = db_delete('menu_custom')
    ->condition('menu_name', 'quick-links-menu')
    ->execute();

  cache_clear_all('*', 'cache_menu', TRUE);
}


/**
 * Build link function
 */
function build_new_link() {
  $links = array(
    'menu_name' => 'quick-links-menu',
    'link_title' => 'Quick Link 1',
    'link_path' => '<front>',
    'expanded' => 1,
    'customized' => 1,
    'weight' => 0,
    'hidden' => 0,
    'updated' => 0
  );

  // Build Query if new link menu exists
  $query = db_select('menu_links', 't');
  $query->fields('t', array('link_path', 'link_title')); 
  $query->condition('t.link_path', $links['link_path'], '=');
  $query->condition('t.link_title', $links['link_title'], '=');

  $result1 = $query->range(0,5)->execute();
  $row_count = $result1->rowCount();

  // Check if menu exists
  if(!($row_count >= 1)) {
    menu_link_save($links);
  } else {
    drupal_set_message("Can't add menu link 'Quick Link 1', link 'Quick Link 1' already exists");
  }
}


/**
 * Set Roler Permission 
 * user_role_grant_permissions(): Same functionality except this is not working.
 */
function set_module_permission() {
  $arr = array(
    array(
      'rid' => user_role_load_by_name('super administrator')->rid,
      'role' => 'super administrator',
      'permission' => 'administer quick-links-menu menu items',
      'module_name' => 'menu_admin_per_menu'
    ),
    array(
      'rid' => user_role_load_by_name('administrator')->rid,
      'role' => 'administrator',
      'permission' => 'administer quick-links-menu menu items',
      'module_name' => 'menu_admin_per_menu'
    ),
    array(
      'rid' => user_role_load_by_name('moderator')->rid,
      'role' => 'moderator',
      'permission' => 'administer quick-links-menu menu items',
      'module_name' => 'menu_admin_per_menu'
    )
  );

  foreach($arr as $r) {
    // Set permission to super admin
    $query = db_select('role_permission', 't');
    $query->fields('t', array('rid', 'permission', 'module')); 
    $query->condition('t.rid', $r['rid'], '=');
    $query->condition('t.permission', $r['permission'], '=');
    $query->condition('t.module', $r['module_name'], '=');
    $resultOne = $query->execute();
    $row_count_one = $resultOne->rowCount();

    if($row_count_one == 0) {
      db_insert('role_permission')->fields(array('rid' => $r['rid'], 'permission' => $r['permission'], 'module' => $r['module_name'] ))->execute();
      drupal_set_message("** Quick links menu granted permission of '". $r['rid'] ."' '".$r['role']."' **");
    } else {
      drupal_set_message("** Can't set permission. Permission already set! **");
    }  
  }
}




